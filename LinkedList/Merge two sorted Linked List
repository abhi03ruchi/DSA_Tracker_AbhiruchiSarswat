public class merge2SortedLL {
    public static void printNode(Node head) {
        if (head == null) {
            return ;
        }
        Node curr = head;
        while (curr != null) {
            System.out.print(curr.data+ " ");
            curr = curr.next;
        }
    }
    public static Node sortedMerge(Node head1, Node head2) {
        if( head1 == null){
            return head2;
        }
        if(head2== null){
            return head1;
        }
        Node head = null;
        Node tail = null;

        if(head1.data > head2.data){
            head=head2;
            tail=head2;
            head2 = head2.next;
        }
        else{
            head=head1;
            tail=head1;
            head1 = head1.next;
        }
        while(head1!=null && head2!=null){
            if(head2.data >= head1.data){
                tail.next = head1;
                tail=head1;
                head1= head1.next;
            }
            else {
                tail.next = head2;
                tail=head2;
                head2= head2.next;
            }
        }
        if(head1 == null ){
            tail.next=head2;
        }
        else{
            tail.next=head1;
        }
        return head;
    }
    public static void main(String[] args) {
        Node head1 = new Node(10);
        head1.next = new Node(20);
        head1.next.next = new Node(30);
        Node head2 = new Node(5);
        head2.next = new Node(35);

        printNode(head1);
        System.out.println();
        printNode(head2);
        System.out.println();
        Node head = sortedMerge(head1,head2);
        printNode(head);
    }
}
